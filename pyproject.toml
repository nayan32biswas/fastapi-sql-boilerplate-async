[tool.poetry]
name = "fastapi-sql-boilerplate-async"
version = "0.1.0"
description = ""
authors = ["nayan32biswas <nayan32biswas@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
bcrypt = "^4.1.2"
celery = "^5.3.6"
email-validator = "^2.1.1"
fastapi = "^0.110.1"
gunicorn = "^21.2.0"
httpx = "^0.27.0"
psycopg2-binary = "^2.9.9"
pydantic-settings = "^2.2.1"
pyjwt = "^2.8.0"
python-multipart = "^0.0.9"
redis = "^5.0.3"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.29"}
typer = "^0.12.1"
ujson = "^5.9.0"
uvicorn = "^0.25.0"

[tool.poetry.group.dev.dependencies]
coverage = "^7.4.4"
faker = "^24.8.0"
mypy = "^1.9.0"
ruff = "^0.3.5"
types-redis = "^4.6.0.20240106"
pytest = "^8.1.1"
pytest-asyncio = "0.21.1"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.5.0"
watchdog = "^4.0.0"

[tool.pytest.ini_options]
# enable this line for parallel testing
# addopts = "-vv -n 4 --cov --cov-report xml --cov-report term-missing --cov-fail-under=90"
addopts = "--cov --cov-report xml --cov-report term-missing"
asyncio_mode = "auto"

[tool.coverage.run]
omit=["tests/*", "test_*.py", "migrations/*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = ""
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = ""
warn_unused_ignores = false

[tool.ruff]
line-length = 100
lint.select = ["E", "W", "F", "I", "C", "B", "UP"]
lint.ignore = ["E501", "B008", "C901", "W191"]
exclude = [
    "static",
    "media",
    "migrations",
]

[tool.ruff.lint.per-file-ignores]
# "__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-third-party = [
    'fastapi',
    'pydantic',
    'sqlalchemy',
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true